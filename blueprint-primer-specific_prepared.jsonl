{"prompt":"What is blueprint? \n","completion":" blueprint is a paradigm that lets you write schema code and it can generate code while at the same time giving you the ability to add features, modify code and also support additional functionalities. Because Blueprint outputs an X-Framework compatible project, it's important that you have you are up to date with the X-Framework basics. \\n\n"}
{"prompt":"Pre-requisites for building a project in blueprint →","completion":" 1. Have node.js 14+ and mongodb installed \\n 2. Have mongodb service running\\n\n"}
{"prompt":"Create a new project →","completion":" 1. npm i -g i -g bluelibs\/x (installs the x framework) \\n  2. x then choose x:project (creates a project using x) \\n 3. cd project npm install \\n\n"}
{"prompt":"Create the basic structure of the project →","completion":" npm run blueprint:generate \\n  This creates two microservices: api, which contains MongoDB and graphQL interfaces powered by XFramework and the admin powered by Webpack,  React and Ant Design \\n\n"}
{"prompt":"Customize the api: →","completion":" 1. under blueprint\/collections : edit User.ts as needed (add fields, relations, behaviors etc) \\n 2. create a collection in blueprint\/collections and add fields, for example: collection({ id: \"Tasks\", description: \"A collection for TO DO list items\", fields: [ \/\/ Here we specify the fields for collection field({ id: \"title\", type: fields.types.STRING, }),  field({ id: \"description\", type: fields.types.STRING, }),  field({ id: \"softDeadline\", type: fields.types.DATE, }),   field({ id: \"hardDeadline\", type: fields.types.DATE, }),  field({ id: \"createdAt\", type: fields.types.DATE, defaultValue: new Date(), }), ], })\n"}
{"prompt":"Generate the customized project: →","completion":" npm run blueprint:generate \\n\n"}
{"prompt":"Add behaviors or relations to the collection: →","completion":" fill collection({ id: \"Tasks\", relations[] \\n\n"}
